<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-9U1KJMDO" failures="0" tests="13" name="Default test" time="6.927" errors="0" timestamp="2024-12-21T12:50:12 IST">
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.008">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, com.aventstack.extentreports.markuputils.Markup)&amp;quot; because &amp;quot;this.logger&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, com.aventstack.extentreports.markuputils.Markup)" because "this.logger" is null
at com.tests.BaseTest.afterMethod(BaseTest.java:60)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.tests.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.tests.LoginTest" name="Verify_loginButton_Displaying" time="3.068"/>
  <testcase classname="com.tests.LoginTest" name="UsernameField_Displaying" time="0.0">
    <skipped/>
  </testcase> <!-- UsernameField_Displaying -->
  <testcase classname="com.tests.LoginTest" name="PasswordField_Displaying" time="0.0">
    <skipped/>
  </testcase> <!-- PasswordField_Displaying -->
  <testcase classname="com.tests.LoginTest" name="login_With_Valid_Credentials" time="0.0">
    <skipped/>
  </testcase> <!-- login_With_Valid_Credentials -->
  <testcase classname="com.tests.LoginTest" name="login_With_Invalid_Credentials" time="0.0">
    <skipped/>
  </testcase> <!-- login_With_Invalid_Credentials -->
  <testcase classname="com.tests.LoginTest" name="Login_With_Invalid_UserName_And_Valid_Password" time="0.0">
    <skipped/>
  </testcase> <!-- Login_With_Invalid_UserName_And_Valid_Password -->
  <testcase classname="com.tests.LoginTest" name="Login_With_ValidUserName_And_Invalid_Password" time="0.0">
    <skipped/>
  </testcase> <!-- Login_With_ValidUserName_And_Invalid_Password -->
  <testcase classname="com.tests.LoginTest" name="Press_login_Button_Without_Enter_Credentials_Alert" time="0.0">
    <skipped/>
  </testcase> <!-- Press_login_Button_Without_Enter_Credentials_Alert -->
  <testcase classname="com.tests.LoginTest" name="Press_login_Button_Without_UserName_With_Password_Alert" time="0.001">
    <skipped/>
  </testcase> <!-- Press_login_Button_Without_UserName_With_Password_Alert -->
  <testcase classname="com.tests.LoginTest" name="Press_login_Button_With_UserName_Without_Password_Alert" time="0.001">
    <skipped/>
  </testcase> <!-- Press_login_Button_With_UserName_Without_Password_Alert -->
  <testcase classname="com.tests.LoginTest" name="Press_login_Button_With_Invalid_UserName_Invalid_Password_Alert" time="0.0">
    <skipped/>
  </testcase> <!-- Press_login_Button_With_Invalid_UserName_Invalid_Password_Alert -->
  <testcase classname="com.tests.LoginTest" name="Verify_LogOut_Button" time="0.0">
    <skipped/>
  </testcase> <!-- Verify_LogOut_Button -->
  <testcase classname="com.tests.LoginTest" name="login_With_Excel_Credentials" time="0.0">
    <skipped/>
  </testcase> <!-- login_With_Excel_Credentials -->
</testsuite> <!-- Default test -->
